import { useState, useEffect } from "react";
import PropTypes from "prop-types";

function AnimatedExplanation({ explanation }) {
  const [isVisible, setIsVisible] = useState(false);

  useEffect(() => {
    if (explanation) {
      setIsVisible(false);
      // Small delay before showing the text
      const timer = setTimeout(() => {
        setIsVisible(true);
      }, 100);
      return () => clearTimeout(timer);
    }
  }, [explanation]);

  if (!explanation) return null;

  // Split the text into paragraphs and render each with proper spacing
  const renderParagraphs = (text) => {
    return text.split("\n\n").map((paragraph, index) => (
      <p key={index} className="mb-4 last:mb-0">
        {paragraph}
      </p>
    ));
  };

  return (
    <div className="mt-8 p-4 bg-base-200 rounded-lg relative">
      <h3 className="text-xl font-semibold mb-4">Analysis</h3>
      <div className="min-h-[100px]">
        <div
          className={`text-base whitespace-pre-wrap transition-all duration-500 ${
            isVisible ? "opacity-100 translate-y-0" : "opacity-0 translate-y-4"
          }`}
        >
          {renderParagraphs(explanation)}
        </div>
      </div>
      {isVisible && (
        <div className="absolute bottom-2 right-2 text-xs text-base-content/50">
          Generated by AI
        </div>
      )}
    </div>
  );
}

AnimatedExplanation.propTypes = {
  explanation: PropTypes.string,
};

export default AnimatedExplanation;
